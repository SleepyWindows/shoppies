{"version":3,"sources":["Components/SearchBar.jsx","Components/SearchResult.jsx","Containers/SearchContainer.jsx","Components/Nomination.jsx","Containers/NominationList.jsx","banners/banner-03.png","Components/Finished.jsx","banners/symbol-01.png","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","id","class","showNoResults","placeholder","onChange","e","updateSearchTerms","target","SearchResult","result","nominations","src","Poster","Title","Year","indexOf","disabled","onClick","nominate","require","config","SearchContainer","state","searchTerms","results","fetchSearchResults","fetch","process","API_KEY","then","res","json","data","Response","console","log","Error","setState","Search","value","this","map","index","React","Component","Nomination","alt","removeNomination","Nominations","Finished","App","isLoading","toggle","finishedVisible","length","prevState","obj","array","splice","NominationSymbol","banner","NominationList","setTimeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.094cece3.chunk.js","sourcesContent":["import React from 'react';\n\nconst SearchBar = (props) => {\n    return ( \n    <div id='search-bar-container'>\n        <h1 id='search-bar-header'>\n            OMDB Database\n        </h1>\n        <div id='search-input-box'>\n            <input class='search-input' showNoResults={false} placeholder='Search Movies...' onChange={(e) => {\n                props.updateSearchTerms(e.target)\n            }}/>\n        </div>\n    </div> );\n}\n \nexport default SearchBar;\n","import React from 'react';\n\nconst SearchResult = (props) => {\n    const disableButton = (result, nominations) =>{\n        var index = nominations.indexOf(result)\n        if (index !== -1) {\n            return true\n        }else{\n            return false\n        }\n    }\n\n    return (\n        <div class='result-container' >\n            <div class='result-content' >\n                <img class='result-image' src={props.result.Poster} />\n                <h1 class='result-title' >{props.result.Title}</h1>\n                <h1 class='result-year' >{props.result.Year}</h1>\n            </div>\n            {disableButton(props.result, props.nominations) \n            ?   <button class='result-disabled-btn' disabled={true}>Nominate</button>\n            :   <button class='result-active-btn' disabled={false} onClick={(e) =>{props.nominate(props.result)}}>Nominate</button>\n            }\n        </div> \n    );\n}\nexport default SearchResult;","import React from 'react';\nimport SearchBar from '../Components/SearchBar'\nimport SearchResult from '../Components/SearchResult'\nrequire('dotenv').config()\n\nclass SearchContainer extends React.Component {\n    state = { \n        searchTerms: null,\n        results: []\n    }\n    \n    render() { \n        console.log(process.env)\n        return ( \n            <div>\n                <SearchBar \n                    searchTerms={this.state.searchTerms} \n                    updateSearchTerms={this.updateSearchTerms}/>\n                <div id='search-result-parent'>\n                    {this.state.results.map((result, index) => {\n                        return(\n                            <SearchResult \n                                key={index} result={result} \n                                nominations={this.props.nominations} \n                                nominate={this.props.nominate}/>\n                        )\n                    })} \n                </div>\n            </div>\n        );\n    }\n     \n    fetchSearchResults = () =>{\n        fetch(`http://www.omdbapi.com/?apikey=${process.env.API_KEY}&type=movie&s=${this.state.searchTerms}&page=1`)\n        .then((res) => res.json())\n        .then((data) =>{\n            if(data.Response == \"False\"){\n                console.log(data.Error)\n            }else{\n            this.setState({\n            results: data.Search,\n            })}\n        })\n        \n    }\n    \n    updateSearchTerms = (e) =>{\n        this.setState({\n            searchTerms: e.value\n        }, ()=>{\n            this.fetchSearchResults()\n        })\n    }\n}\n\n\n\nexport default SearchContainer;","import React from 'react';\n\nconst Nomination = (props) => {\n    return ( \n       <div class='nomination-container'>\n           <div class='nomination-img-container'>\n                <img src={props.result.Poster} alt='Movie Poster'/>\n            </div>\n            <button class='nomination-remove-btn' onClick={() =>{props.removeNomination(props.result)}}>\n                Remove\n            </button>\n        </div>\n    );\n}\nexport default Nomination;","import React from 'react';\nimport Nomination from '../Components/Nomination';\n\nconst Nominations = (props) => {\n    return ( \n        <div class='nomination-list-container'>\n            <p id='nomination-list-header'>Your Nominations</p>\n            {props.nominations.map(result =>{\n                return(\n                    <Nomination result={result} nominations={props.nominations} removeNomination={props.removeNomination}/>\n            )})}\n        </div>\n    );\n}\nexport default Nominations;","export default __webpack_public_path__ + \"static/media/banner-03.6600e5a8.png\";","import React from 'react';\nimport Nomination from './Nomination';\n\nconst Finished = (props) => {\n    console.log(props)\n    return ( \n    <div class='banner-wrapper'>\n        <div id='finished-banner'>\n            <h1 id='finished-text'>Finished!</h1>\n            <div id='finished-nominations'>\n                {props.nominations.map(result=>{\n                    return(\n                    <Nomination result={result} removeNomination={props.removeNomination}/>\n                )})}\n            </div>\n            {/* <button id='banner-submit-button'>Submit</button> */}\n        </div>\n    </div>\n     );\n}\n \nexport default Finished;","export default __webpack_public_path__ + \"static/media/symbol-01.78652249.png\";","import React from 'react';\nimport SearchContainer from './Containers/SearchContainer';\nimport NominationList from './Containers/NominationList';\nimport banner from './banners/banner-03.png'\nimport './App.css';\nimport Finished from './Components/Finished';\nimport NominationSymbol from './banners/symbol-01.png'\n\n\n\nclass App extends React.Component {\n\n  state = { \n    results: null,\n    isLoading: true,\n    nominations: [],\n    searchTerms: 'Love',\n    toggle: false,\n    finishedVisible: false\n   }\n\n  render() { \n    return ( \n    <div>\n      {this.state.isLoading ? ( \n        <div>\n      <p id='loading-text'>Loading</p>\n      </div>\n      ) : (\n        <div >\n          <button id='selection-list-btn' onClick={()=>{this.toggle()}}><img id='selection-symbol' src={NominationSymbol}/></button>\n          <img src={banner} id='banner'/>\n            {this.state.finishedVisible ? <Finished nominations={this.state.nominations} removeNomination={this.removeNomination}/> : null}\n              <SearchContainer nominate={this.nominate} nominations={this.state.nominations} fetchSearchResults={this.fetchSearchResults}/>\n              {this.state.toggle ? (\n              <NominationList removeNomination={this.removeNomination} nominations={this.state.nominations}/>\n              ) : null}\n        </div>\n      )}\n    </div>)\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        isLoading: !this.state.isLoading\n      })\n    }, 2000)\n  }\n  \n  toggle = () =>{\n    this.setState({\n      toggle: !this.state.toggle\n    })\n  }\n\n  nominate = (result) =>{\n    if(this.state.nominations.length === 4){\n      this.setState(prevState =>({\n        finishedVisible: true,\n        nominations: [...prevState.nominations, result]\n      }))\n    }else if(this.state.nominations.length === 5){\n      console.log('No additional nominations allowed')\n    }else {\n    this.setState(prevState => ({\n      nominations: [...prevState.nominations, result]\n    }))}\n  }\n\n  removeNomination = (obj) =>{\n    var array = [...this.state.nominations]; // make a separate copy of the array\n    var index = array.indexOf(obj)\n    if (index !== -1) {\n        array.splice(index, 1);\n        this.setState({nominations: array, finishedVisible: false});\n    }\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}